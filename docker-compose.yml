
services:
  airflow-initdb:
    container_name: airflow-initdb
    build:
      context: ./build/airflow
    volumes:
      - ${AIRFLOW_CODE_PATH}:/opt/airflow
      - ${AIRFLOW_DAGS_PATH}:/opt/airflow-dags
    entrypoint: /bin/bash
    command:
      - -c
      - |
        FILE=${AIRFLOW_DB_FILE}
        if [ ! -f $${FILE} ]; then
            echo "Database file $${FILE} not found!"
            airflow db init
            airflow users create -u ${AIRFLOW_ADMIN_USERNAME} -f ${AIRFLOW_ADMIN_FIRSTNAME} -l ${AIRFLOW_ADMIN_LASTNAME} -r Admin -e ${AIRFLOW_ADMIN_EMAIL} -p '${AIRFLOW_ADMIN_PASSWORD}'
        else
          echo "Database file $${FILE} exists. Skipping database initialization."
        fi

  airflow-webserver:
    container_name: airflow-webserver
    build:
      context: ./build/airflow
    depends_on:
      - airflow-initdb
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: False
      AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 30
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow-dags
    volumes:
      - ${AIRFLOW_CODE_PATH}:/opt/airflow
      - ${AIRFLOW_DAGS_PATH}:/opt/airflow-dags
    ports:
      - ${AIRFLOW_WEBSERVER_PORT}:${AIRFLOW_WEBSERVER_PORT}
      - ${AIRFLOW_WEBSERVER_DEBUG_PORT}:${AIRFLOW_WEBSERVER_DEBUG_PORT}
    entrypoint: airflow webserver

  airflow-scheduler:
    container_name: airflow-scheduler
    build:
      context: ./build/airflow
    depends_on:
      - airflow-initdb
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: False
      AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 30
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow-dags
    volumes:
      - ${AIRFLOW_CODE_PATH}:/opt/airflow
      - ${AIRFLOW_DAGS_PATH}:/opt/airflow-dags
    entrypoint: airflow scheduler

  minio:
    container_name:  minio
    image: quay.io/minio/minio:latest
    command: server ${MINIO_DATA_PATH} --address ":${MINIO_API_PORT}" --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - ${MINIO_API_PORT}:${MINIO_API_PORT}
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
    volumes:
      - ${MINIO_DATA_PATH}:/data                          # Persist data on host
  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,BROKER://broker:9094,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,BROKER://broker:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,BROKER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    ports:
      - ${CLICKHOUSE_HTTP_PORT}:8123
      - ${CLICKHOUSE_TCP_PORT}:9000
    volumes:
      - ${CLICKHOUSE_DATA_PATH}:/var/lib/clickhouse
      - ${CLICKHOUSE_LOG_PATH}:/var/log/clickhouse-server
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}

  superset:
    build:
      context: ./build/superset
    container_name: superset
    environment:
      ADMIN_USERNAME: ${SUPERSET_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${SUPERSET_ADMIN_PASSWORD}
      ADMIN_EMAIL: ${SUPERSET_ADMIN_EMAIL}
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
    ports:
      - ${SUPERSET_PORT}:8088
    volumes:
      - ${SUPERSET_HOME_PATH}:/app/superset_home